<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/cache
						http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- 配置使用注解 -->
	<context:annotation-config />
	<!-- 让容器到指定包目录下寻找需要被当做组件的类 -->
	<context:component-scan base-package="cn.wqy" />
	<!-- 配置二级缓存自动搜索annotation -->
<!-- 	<cache:annotation-driven />
	<bean id="cacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:META-INF/ehcache.xml" />
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManagerFactory" />
	</bean> -->
	<!-- 事务管理******************************************************************************************** -->
	<!-- <tx:annotation-driven transaction-manager="txManager"/> -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="check*" propagation="REQUIRED" read-only="true" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut expression="execution(public * cn.wqy.biz..*.*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	<!-- 创建数据源***************************************************************************************** -->
	<context:property-placeholder location="classpath:jdbc.properties" /><!-- 
		classpath表示src目录下的properties文件 -->
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 创建SessionFactory，并注入数据源********************************************************************* -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="DataSource" ref="myDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>cn.wqy.model.Member</value>
				<value>cn.wqy.model.MemberBase</value>
				<value>cn.wqy.model.Lab109</value>
				<value>cn.wqy.model.Lab117</value>
				<value>cn.wqy.model.Lab303</value>
				<value>cn.wqy.model.Lab305</value>
				<value>cn.wqy.model.Lab313</value>
				<value>cn.wqy.model.Lab404</value>
				<value>cn.wqy.model.Lab412</value>
				<value>cn.wqy.model.SecureEmail</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>

	</bean>
	<!-- 创建hibernateTemplate********************************************************************************** -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- JavaMail相关设置**************************************************************************************** -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.163.com" />
		<property name="username" value="no_reply_sjtulab@163.com" />
		<property name="password" value="sjtulab" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
	<!-- **************************************************************************************************** -->
	<!-- <bean id="TestInterceptor" class="cn.wqy.aop.Interceptor" /> <aop:config> 
		<aop:pointcut expression="execution(public void cn.wqy.biz.UserServiceImpl.addUser(cn.wqy.model.User))" 
		id="Test" /> <aop:aspect ref="TestInterceptor"> <aop:before method="before" 
		pointcut-ref="Test" /> </aop:aspect> </aop:config> -->

</beans>